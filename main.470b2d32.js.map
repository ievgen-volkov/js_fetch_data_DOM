{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","DETAILS_URL","logo","document","querySelector","list","createElement","getPhones","fetch","then","response","ok","setTimeout","Promise","reject","Error","status","statusText","headers","get","includes","json","result","getPhonesDetails","phonesId","phones","forEach","phone","push","id","phonesDetails","map","itemId","all","details","addPhoneToList","name","catch","error","phonesName","insertAdjacentHTML","after"],"mappings":";AAAA,aAIA,IAAMA,EACF,wEACEC,EACF,oEAEEC,EAAOC,SAASC,cAAc,SAC9BC,EAAOF,SAASG,cAAc,MAE9BC,EAAY,WACTC,OAAAA,MAAMR,GACVS,KAAK,SAAAC,GACA,IAACA,EAASC,GACNC,MAAAA,WAAW,WACRC,OAAAA,QAAQC,OAAO,IAAIC,MACrBL,GAAAA,OAAAA,EAASM,OAAYN,OAAAA,OAAAA,EAASO,eAElC,KAGD,IAACP,EAASQ,QAAQC,IAAI,gBAAgBC,SAAS,oBAC3CR,MAAAA,WAAW,WACRC,OAAAA,QAAQC,OAAO,IAAIC,MACWL,mCAAAA,OAAAA,EAASM,WAE7C,KAGEN,OAAAA,EAASW,SAEjBZ,KAAK,SAAAa,GAAUA,OAAAA,KAGdC,EAAmB,WACjBC,IAAAA,EAAW,GAEjBjB,IACGE,KAAK,SAAAgB,GACJA,EAAOC,QAAQ,SAAAC,GAASH,OAAAA,EAASI,KAAKD,EAAME,MAEtCC,IAAAA,EAAgBN,EAASO,IAAI,SAAAC,GACjCxB,OAAAA,MAASP,GAAAA,OAAAA,GAAc+B,OAAAA,EAAvB,UACGvB,KAAK,SAAAC,GAAYA,OAAAA,EAASW,WAE/BR,QAAQoB,IAAIH,GACTrB,KAAK,SAAAyB,GAAWA,OAAAA,EAAQR,QAAQ,SAAAC,GAASQ,OAAAA,EAAeR,EAAMS,YAElEC,MAAM,SAAAC,GAAS,OAAA,IAAIvB,MAAMuB,MAK9B,SAASH,EAAeI,GACtBlC,EAAKmC,mBAAmB,YAAoBD,OAAAA,OAAAA,EAA5C,UAHFhB,IAMArB,EAAKuC,MAAMpC","file":"main.470b2d32.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write your code here\n\nconst BASE_URL\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\nconst DETAILS_URL\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones/';\n\nconst logo = document.querySelector('.logo');\nconst list = document.createElement('ul');\n\nconst getPhones = () => {\n  return fetch(BASE_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw setTimeout(() => {\n          return Promise.reject(new Error(\n            `${response.status} - ${response.statusText}`\n          ));\n        }, 5000);\n      }\n\n      if (!response.headers.get('content-type').includes('application/json')) {\n        throw setTimeout(() => {\n          return Promise.reject(new Error(\n            `Content-type is not supported - ${response.status}`\n          ));\n        }, 5000);\n      }\n\n      return response.json();\n    })\n    .then(result => result);\n};\n\nconst getPhonesDetails = () => {\n  const phonesId = [];\n\n  getPhones()\n    .then(phones => {\n      phones.forEach(phone => phonesId.push(phone.id));\n\n      const phonesDetails = phonesId.map(itemId =>\n        fetch(`${DETAILS_URL}${itemId}.json`)\n          .then(response => response.json()));\n\n      Promise.all(phonesDetails)\n        .then(details => details.forEach(phone => addPhoneToList(phone.name)));\n    })\n    .catch(error => new Error(error));\n};\n\ngetPhonesDetails();\n\nfunction addPhoneToList(phonesName) {\n  list.insertAdjacentHTML('beforeend', `<li>${phonesName}</li>`);\n}\n\nlogo.after(list);\n"]}